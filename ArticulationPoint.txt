
Algorithm to Find All Articulation Points

Data: G(V, E), s
Result: Articulation vertices in G

DFSTree(G);
Procedure ArticulationPoints(s, d) 
Visited[s] = TRUE;
depth[s] = d;
low[s] = d;
for each kÐ„ Adj(s) do
  if Visited[s] == FALSE then Articulation Point (k, d+1);
end
low[s]= min (low[s], low[k]);

if low[k]>= depth[s] then
  if s = not a root node OR number of children(s) > 1 then
     print("s is a articulation point");
  end
end
end

Time Complexity Analysis
The algorithm mainly uses the DFS search with some additional steps. 
So basically, the time complexity of this algorithm is equal to the time complexity of the DFS algorithm.
In case the given graph uses the adjacency list, the time complexity of the DFS algorithm would be O(V + E). 
Therefore, the overall time complexity of this algorithm is   O(V + E).
