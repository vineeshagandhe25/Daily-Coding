HEAPQ IN PYTHON
heap = []            # creates an empty heap
heappush(heap, item) # pushes a new item on the heap
item = heappop(heap) # pops the smallest item from the heap
item = heap[0]       # smallest item on the heap without popping it
heapify(x)           # transforms list into a heap, in-place, in linear time

* To create a heap, use a list initialized to [], or you can transform a populated list into a heap via function heapify().
* heapq.heappush(heap, item)
Push the value item onto the heap, maintaining the heap invariant.
* heapq.heappop(heap)
Pop and return the smallest item from the heap, maintaining the heap invariant. If the heap is empty,
* heapq.heapify(x)
Transform list x into a heap, in-place, in linear time.
* We use heapq class to implement Heap in Python. By default Min Heap is implemented by this class. But we multiply each value by -1 so that we can use it as MaxHeap.

*** useful link --- https://docs.python.org/3/library/heapq.html