The count-and-say sequence is a sequence of digit strings defined by the recursive formula:
countAndSay(1) = "1"
countAndSay(n) is the run-length encoding of countAndSay(n - 1).

class Solution {
    public String countAndSay(int n) {
        if (n <= 0) return "";
        String result = "1";

        for (int i = 2; i <= n; i++) {
            StringBuilder sb = new StringBuilder();
            int count = 1;
            char prevChar = result.charAt(0);

            for (int j = 1; j < result.length(); j++) {
                char currentChar = result.charAt(j);
                if (currentChar == prevChar) {
                    count++;
                } else {
                    sb.append(count).append(prevChar);
                    prevChar = currentChar;
                    count = 1;
                }
            }
            sb.append(count).append(prevChar); 
            result = sb.toString();
        }

        return result;
    }
}

Time complexity = O(2^n)
Space complexity = O(2^n)