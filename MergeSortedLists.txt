You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = m - 1; 
        int j = n - 1; 
        int k = m + n - 1; 
        
        while (i >= 0 && j >= 0) {
            if (nums1[i] > nums2[j]) {
                nums1[k] = nums1[i];
                i--;
            } else {
                nums1[k] = nums2[j];
                j--;
            }
            k--;
        }

        while (j >= 0) {
            nums1[k] = nums2[j];
            j--;
            k--;
        }    
    }

}

Explanation ---

Pointers
i = m - 1 → Last valid element in nums1
j = n - 1 → Last element in nums2
k = m + n - 1 → Last position in nums1

Comparison & Merging
Start merging from the end of both arrays.
Place the larger element at index k in nums1.
Move the respective pointer (i or j) and decrease k.

Copy Remaining Elements
If nums2 has remaining elements, copy them to nums1 (since nums1 is already sorted, leftover nums1 elements don’t need to be moved).

Time complexity ---  O(m + n) .
Space complexity --- O(1).