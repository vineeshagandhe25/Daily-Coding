A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters,
 it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.

Approach:
Normalize the string:
Convert all uppercase letters to lowercase.
Remove all non-alphanumeric characters (letters and digits).
Check for palindrome:
Use two pointers: one starting at the beginning of the string and the other at the end.
Compare characters at both pointers, moving towards the center.
If they are not the same at any point, return false. If all characters match, return true.

class Solution {
    public boolean isPalindrome(String s) {
        StringBuilder filteredString = new StringBuilder();
        
        for (char c : s.toCharArray()) {
            if (Character.isLetterOrDigit(c)) {
                filteredString.append(Character.toLowerCase(c));
            }
        }

        int left = 0;
        int right = filteredString.length() - 1;
        while (left < right) {
            if (filteredString.charAt(left) != filteredString.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}

Time Complexity: O(n)
Space Complexity: O(n)  